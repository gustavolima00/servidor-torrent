<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title><%= title %></title>
    <style>
      body {
        font-family: "Arial", sans-serif;
      }
      .torrent {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <h1>Arquivos sendo baixados</h1>

    <h2>Baixar novo torrent</h2>
    <form id="downloadForm">
      <label for="magnetUri">Magnet URI:</label>
      <input type="text" id="magnetUri" name="magnetUri" required />
      <label for="downloadPath">Download path:</label>
      <input type="text" id="downloadPath" name="downloadPath" value="" />
      <button type="button" onclick="download()">Baixar</button>
    </form>

    <h2>Torrents</h2>

    <% torrents.forEach(torrent => { %>
    <div class="torrent" data-infohash="<%= torrent.infoHash %>">
      <p>Name: <%= torrent.name %></p>
      <p>Info Hash: <%= torrent.infoHash %></p>
      <p>Download Path: <%= torrent.path %></p>
      <p>Progress: <%= (torrent.progress * 100).toFixed(2) %> %</p>
      <button class="remove-torrent-button">Remover</button>
    </div>
    <% }) %>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const removeButtons = document.querySelectorAll(
          ".remove-torrent-button"
        );

        removeButtons.forEach((button) => {
          button.addEventListener("click", function () {
            const torrentDiv = button.closest(".torrent");
            const infoHash = torrentDiv.dataset.infohash;

            fetch(`/torrent/${infoHash}`, {
              method: "DELETE",
            }).then((response) => {
              if (response.ok) {
                torrentDiv.remove();
              } else {
                alert("Erro ao remover torrent", response.body());
              }
            });
          });
        });
      });

      function download() {
        const magnetUri = document.getElementById("magnetUri").value;
        const downloadPath = document.getElementById("downloadPath").value;

        if (!magnetUri)
          return alert("Por favor, insira uma Magnet URI vÃ¡lida.");

        fetch(
          `/torrent/download?magnet=${encodeURIComponent(
            magnetUri
          )}&downloadPath=${encodeURIComponent(downloadPath)}`,
          {
            method: "GET",
          }
        )
          .then((response) => {
            if (!response.ok)
              throw new Error(`HTTP error! Status: ${response.status}`);
            return response.text();
          })
          .then((message) => {
            alert(message);
          })
          .catch((error) => {
            console.error(error);
            alert("Erro ao baixar o torrent: " + error.message);
          });

        // Reload page
        window.location.reload();
      }
    </script>
  </body>
</html>
